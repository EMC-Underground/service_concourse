---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: alpinelinux/docker-cli
    tag: latest

params:
  DNS_SUFFIX: ((dnssuffix))
  DOCKER_HOST: ((dockerhost))

inputs:
  - name: concourse_repo

run:
  path: ash
  args:
  - -c
  - |
    apk add --no-cache ansible
    mkdir /tmp/web
    mkdir /tmp/worker
    cd concourse_repo
    echo "Docker Host: ${DOCKER_HOST}"
    server_list=((server_list))
    echo "${server_list}"
    array=$(echo "${server_list}" | tr ',' '\n')
    echo "[web]" > hosts
    echo "[worker]" >> hosts
    count=$(printf "%s\n" "$array" | wc -l)
    echo "array contents: ${array}"
    echo "after count"
    echo $count
    for i in $(seq 1 $count)
    do
        if [ $i -eq 1 ]
        then
            echo "in the first node loop"
            sed -i "/\[web\]/a `echo $array | awk 'NR==${i}{print $0}'`" hosts
            sed -i "/\[worker\]/a `echo $array | awk 'NR==${i}{print $0}'`" hosts
        else
            echo "in the subsequent nodes loop"
            sed -i "/\[worker\]/a `echo $array | awk 'NR==${i}{print $0}'`" hosts
        fi
    done
    echo "Hosts file:\n"
    cat hosts
    sed -i "/\[defaults\]/a host_key_checking = False" /etc/ansible/ansible.cfg
    ansible-playbook first_playbook.yml -i hosts --extra-vars '{"ansible_ssh_pass": "((password))"}' -u ((user_name))
    ls -la /tmp/web
    ls -la /tmp/worker
    ansible-playbook second_playbook.yml -i hosts --extra-vars '{"ansible_ssh_pass": "((password))"}' -u ((user_name))
