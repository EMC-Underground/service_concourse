---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: bsoper/alpine-ansible
    tag: latest

params:
  DNS_SUFFIX: ((dnssuffix))
  DOCKER_HOST: ((dockerhost))

inputs:
  - name: concourse_repo

run:
  path: ash
  args:
  - -c
  - |
    mkdir /tmp/web
    mkdir /tmp/worker
    cd concourse_repo
    echo "Docker Host: ${DOCKER_HOST}"
    echo "DNS Suffix: ${DNS_SUFFIX}"
    server_list=((server_list))
    array=$(echo "${server_list}" | tr ',' '\n')
    echo "[web]" > hosts
    echo "[worker]" >> hosts
    count=$(printf "%s\n" "$array" | wc -l)
    for i in $(seq 1 $count)
    do
        if [ $i -eq 1 ]
        then
            node=`echo "${array}" | awk -v  var="$i" 'NR==var{print $0}'`
            sed -i "/\[web\]/a ${node}" hosts
            sed -i "/\[worker\]/a ${node}" hosts
        else
            node=`echo "${array}" | awk -v  var="$i" 'NR==var{print $0}'`
            sed -i "/\[worker\]/a ${node}" hosts
        fi
    done
    echo "Hosts file:"
    cat hosts
    export ANSIBLE_HOST_KEY_CHECKING=False
    ansible-playbook first_playbook.yml -i hosts --extra-vars '{"postgres_pw":"password","dns_suffix":"((dnssuffix))","vault_key":"((vault_concourse_token))","ansible_ssh_pass": "((password))","ansible_python_interpreter": "/usr/bin/python"}' -u ((user_name))
    ansible-playbook local_playbook.yml --inventory=127.0.0.1,
    ansible-playbook second_playbook.yml -i hosts --extra-vars '{"ansible_ssh_pass":"((password))"}' -u ((user_name))
